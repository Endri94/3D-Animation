html {
  box-sizing: border-box;
  scroll-behavior: smooth;
}

* {
  box-sizing: border-box;
  margin: 0;
}

*,
*::before *::after {
  box-sizing: inherit;
}

:root {
  --index: calc(1Vw + 1Vh);
  --transition: cubic-bezier(0.1, .7, 0, 1);
}

body {
  background-color: #141414;
}


.wrapper {
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

.items {
  display: flex;
  gap: 0.4rem;
  perspective: calc(var(--index) * 35);
}

.item {
  width: calc(var(--index) * 3);
  height: calc(var(--index) * 12);
  background-size: cover;
  background-position: center;
  background-color: #222222;
  cursor: pointer;
  filter: grayscale() brightness(0.5);
  transition: transform 1.2s var(--transition), filter 0.3s var(--transition), width 1.25s var(--transition);
  will-change: transofrm, filter;
}

.items .item:hover {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 10));
}

.item::before,
.item::after {
  content: '';
  position: absolute;
  height: 100%;
  width: 20px;
  right: calc(var(--index) * -1);
}

.item::after {
  left: calc(var(--index) * -1);
}

/* right */

.items .item:hover+* {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
  z-index: -1;
}

.items .item:hover+*+* {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
  z-index: -2;
}


.items .item:hover+*+*+* {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 2.4)) rotateY(30deg);
  z-index: -3;
}

.items .item:hover+*+*+*+* {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 0.6)) rotateY(14deg);
  z-index: -4;
}

/* left */

.items .item:has(+ :hover) {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
}

.items .item:has(+* + :hover) {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
}


.items .item:has(+* +*+ :hover) {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 2.4)) rotateY(-30deg);
}

.items .item:has(+* +*+*+ :hover) {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 0.6)) rotateY(-14deg);
}

.items .item:active,
.items .item:focus {
  width: 28VW;
  filter: inherit;
  z-index: 100;
  transform: translateZ(calc(var(--index)) * 10);
  margin: 0 0.45VW;
}